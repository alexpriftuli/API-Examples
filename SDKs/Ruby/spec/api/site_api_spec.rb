=begin
#MINDBODY Public API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v6

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.6

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::SiteApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SiteApi' do
  before do
    # run before each test
    @instance = SwaggerClient::SiteApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SiteApi' do
    it 'should create an instance of SiteApi' do
      expect(@instance).to be_instance_of(SwaggerClient::SiteApi)
    end
  end

  # unit tests for site_get_activation_code
  # Get an activation code for a site.
  # Before you can use this endpoint, MINDBODY must approve your developer account for live access. If you have finished testing in the sandbox and are ready to begin working with MINDBODY customers, log into your account and request to go live.    See [Accessing Business Data From MINDBODY](https://developers.mindbodyonline.com/PublicDocumentation/V6#accessing-business-data) for more information about the activation code and how to use it.    Once you are approved, this endpoint returns an activation code.This endpoint supports only one site per call.
  # @param version 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization A staff user authorization token.
  # @return [GetActivationCodeResponse]
  describe 'site_get_activation_code test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for site_get_locations
  # Get locations for a site.
  # @param site_id ID of the site from which to pull data.
  # @param version 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization A staff user authorization token.
  # @option opts [Integer] :request_limit Number of results to include, defaults to 100
  # @option opts [Integer] :request_offset Page offset, defaults to 0.
  # @return [GetLocationsResponse]
  describe 'site_get_locations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for site_get_programs
  # Get service categories offered at a site.
  # @param site_id ID of the site from which to pull data.
  # @param version 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization A staff user authorization token.
  # @option opts [Integer] :request_limit Number of results to include, defaults to 100
  # @option opts [Integer] :request_offset Page offset, defaults to 0.
  # @option opts [BOOLEAN] :request_online_only If &#x60;true&#x60;, filters results to show only those programs that are shown online.&lt;br /&gt;  If &#x60;false&#x60;, all programs are returned.&lt;br /&gt;  Default: **false**
  # @option opts [String] :request_schedule_type A schedule type used to filter the returned results.
  # @return [GetProgramsResponse]
  describe 'site_get_programs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for site_get_resources
  # Get resources used at a site.
  # @param site_id ID of the site from which to pull data.
  # @param version 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization A staff user authorization token.
  # @option opts [DateTime] :request_end_date_time The time the resource ends. This parameter is ignored if &#x60;EndDateTime&#x60; or &#x60;LocationID&#x60; is not set.
  # @option opts [Integer] :request_limit Number of results to include, defaults to 100
  # @option opts [Integer] :request_location_id The location of the resource. This parameter is ignored if &#x60;EndDateTime&#x60; or &#x60;LocationID&#x60; is not set.&lt;br /&gt;  Default: **all**
  # @option opts [Integer] :request_offset Page offset, defaults to 0.
  # @option opts [Array<Integer>] :request_session_type_ids List of session type IDs.&lt;br /&gt;  Default: **all**
  # @option opts [DateTime] :request_start_date_time The time the resource starts. This parameter is ignored if &#x60;EndDateTime&#x60; or &#x60;LocationID&#x60; is not set.
  # @return [GetResourcesResponse]
  describe 'site_get_resources test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for site_get_session_types
  # Get the session types used at a site.
  # @param site_id ID of the site from which to pull data.
  # @param version 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization A staff user authorization token.
  # @option opts [Integer] :request_limit Number of results to include, defaults to 100
  # @option opts [Integer] :request_offset Page offset, defaults to 0.
  # @option opts [BOOLEAN] :request_online_only When &#x60;true&#x60;, indicates that only the session types that can be booked online should be returned.&lt;br /&gt;  Default: **false**
  # @option opts [Array<Integer>] :request_program_i_ds Filters results to session types that belong to one of the given program IDs. If omitted, all program IDs return.
  # @return [GetSessionTypesResponse]
  describe 'site_get_session_types test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for site_get_sites
  # Get all sites that can be accessed by an API Key.
  # Gets a list of sites that the developer has permission to view.  * Passing in no &#x60;SiteIds&#x60; returns all sites that the developer has access to.  * Passing in one &#x60;SiteIds&#x60; returns more detailed information about the specified site.
  # @param version 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization A staff user authorization token.
  # @option opts [Integer] :request_limit Number of results to include, defaults to 100
  # @option opts [Integer] :request_offset Page offset, defaults to 0.
  # @option opts [Array<Integer>] :request_site_ids List of the requested site IDs. When omitted, returns all sites that the source has access to.
  # @return [GetSitesResponse]
  describe 'site_get_sites test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
