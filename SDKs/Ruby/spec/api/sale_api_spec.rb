=begin
#MINDBODY Public API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v6

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.6

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::SaleApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SaleApi' do
  before do
    # run before each test
    @instance = SwaggerClient::SaleApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SaleApi' do
    it 'should create an instance of SaleApi' do
      expect(@instance).to be_instance_of(SwaggerClient::SaleApi)
    end
  end

  # unit tests for sale_checkout_shopping_cart
  # Purchase pricing options, packages, retail products, or tips for a client.
  # This endpoint provides a wide range of functionality. For example, you can use it when a client purchases new pricing options, retail products, packages, and tips. You can also combine purchasing a new pricing option and many other functions, such as booking a client into a class, booking a new appointment for a client, enrolling a client into an enrollment or course, or reconciling an unpaid, already booked appointment or class. Use this call when a client purchases:  * a pricing option, after calling &#x60;GET Services&#x60; and choosing a specific pricing option’s ID  * a retail product, after calling &#x60;GET Products&#x60; and choosing a specific retail product’s ID  * a package, after calling &#x60;GET Packages&#x60; and choosing a specific package’s ID  * a tip to give to a staff member, after calling &#x60;GET Staff&#x60; and choosing a specific staff member ID, and the amount that the client wants to tip  The documentation provides explanations of the request body and response, as well as the cart item metadata, payment item metadata, and purchased cart items.
  # @param request 
  # @param site_id ID of the site from which to pull data.
  # @param version 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization A staff user authorization token.
  # @return [Object]
  describe 'sale_checkout_shopping_cart test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sale_get_accepted_card_types
  # Get credit cards types that a site accepts.
  # Gets a list of card types that the site accepts. You can also use &#x60;GET Sites&#x60; to return the Site object, which contains individual accepted card types for requested sites.    This endpoint has no query parameters.The response returns a list of strings. Possible values are:  * Visa  * MasterCard  * Discover  * AMEX
  # @param site_id ID of the site from which to pull data.
  # @param version 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization A staff user authorization token.
  # @return [Array<String>]
  describe 'sale_get_accepted_card_types test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sale_get_contracts
  # Get contracts available for purchase at a site.
  # @param request_location_id The ID of the location that has the requested contracts and AutoPay options.
  # @param site_id ID of the site from which to pull data.
  # @param version 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization A staff user authorization token.
  # @option opts [Integer] :request_consumer_id The ID of the client.
  # @option opts [Array<Integer>] :request_contract_ids When included, the response only contains details about the specified contract IDs.
  # @option opts [Integer] :request_limit Number of results to include, defaults to 100
  # @option opts [Integer] :request_offset Page offset, defaults to 0.
  # @option opts [BOOLEAN] :request_sold_online When &#x60;true&#x60;, the response only contains details about contracts and AutoPay options that can be sold online.&lt;br /&gt;  When &#x60;false&#x60;, only contracts that are not intended to be sold online are returned.&lt;br /&gt;  Default: **all contracts**
  # @return [GetContractsResponse]
  describe 'sale_get_contracts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sale_get_custom_payment_methods
  # Get payment methods that can be used to pay for sales at a site.
  # @param site_id ID of the site from which to pull data.
  # @param version 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization A staff user authorization token.
  # @option opts [Integer] :request_limit Number of results to include, defaults to 100
  # @option opts [Integer] :request_offset Page offset, defaults to 0.
  # @return [GetCustomPaymentMethodsResponse]
  describe 'sale_get_custom_payment_methods test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sale_get_gift_cards
  # Get gift cards available for purchase at a site.
  # @param site_id ID of the site from which to pull data.
  # @param version 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization A staff user authorization token.
  # @option opts [Array<Integer>] :request_ids Filters the results to the requested gift card IDs.&lt;br /&gt;  Default: **all** gift cards.
  # @option opts [Integer] :request_limit Number of results to include, defaults to 100
  # @option opts [Integer] :request_location_id When included, returns gift cards that are sold at the provided location ID.
  # @option opts [Integer] :request_offset Page offset, defaults to 0.
  # @option opts [BOOLEAN] :request_sold_online When &#x60;true&#x60;, only returns gift cards that are sold online.&lt;br /&gt;  Default: **false**
  # @return [GetGiftCardResponse]
  describe 'sale_get_gift_cards test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sale_get_packages
  # Get packages available for purchase at a site.
  # A package is typically used to combine multiple services and/or products into a single offering. Staff members can check out multiple appointments while selling the package, and can discount the items included. For example, a spa might bundle a massage, a pedicure, a manicure, a facial, and a few selected beauty products into a package.
  # @param site_id ID of the site from which to pull data.
  # @param version 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization A staff user authorization token.
  # @option opts [Integer] :request_limit Number of results to include, defaults to 100
  # @option opts [Integer] :request_offset Page offset, defaults to 0.
  # @option opts [Array<Integer>] :request_package_ids A list of the packages IDs to filter by.
  # @option opts [BOOLEAN] :request_sell_online When &#x60;true&#x60;, only returns products that can be sold online.&lt;br /&gt;  When &#x60;false&#x60;, all products are returned.&lt;br /&gt;  Default: **false**
  # @return [GetPackagesResponse]
  describe 'sale_get_packages test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sale_get_products
  # Get retail products available for purchase at a site.
  # @param site_id ID of the site from which to pull data.
  # @param version 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization A staff user authorization token.
  # @option opts [Array<Integer>] :request_category_ids A list of category IDs to filter by.
  # @option opts [Integer] :request_limit Number of results to include, defaults to 100
  # @option opts [Integer] :request_location_id The location ID to use to determine the tax for the products that this request returns.&lt;br /&gt;  Default: **online store**
  # @option opts [Integer] :request_offset Page offset, defaults to 0.
  # @option opts [Array<String>] :request_product_ids An ID filter for products.
  # @option opts [String] :request_search_text A search filter, used for searching by term.
  # @option opts [BOOLEAN] :request_sell_online When &#x60;true&#x60;, only products that can be sold online are returned.&lt;br /&gt;  When &#x60;false&#x60;, all products are returned.&lt;br /&gt;  Default: **false**
  # @option opts [Array<Integer>] :request_sub_category_ids A list of subcategory IDs to filter by.
  # @return [GetProductsResponse]
  describe 'sale_get_products test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sale_get_sales
  # Get sales completed at a site.
  # @param site_id ID of the site from which to pull data.
  # @param version 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization A staff user authorization token.
  # @return [GetSalesResponse]
  describe 'sale_get_sales test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sale_get_services
  # Get pricing options available for purchase at a site
  # @param site_id ID of the site from which to pull data.
  # @param version 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization A staff user authorization token.
  # @option opts [Integer] :request_class_id Filters to the pricing options for the specified class ID.
  # @option opts [Integer] :request_class_schedule_id Filters to the pricing options for the specified class schedule ID.
  # @option opts [BOOLEAN] :request_hide_related_programs When &#x60;true&#x60;, indicates that pricing options of related programs are omitted from the response.&lt;br /&gt;  Default: **false**
  # @option opts [Integer] :request_limit Number of results to include, defaults to 100
  # @option opts [Integer] :request_location_id When specified, for each returned pricing option, &#x60;TaxRate&#x60; and &#x60;TaxIncluded&#x60; are calculated according to the specified location. Note that this does not filter results to only services provided at the given location, and for locations where Value-Added Tax (VAT) rules apply, the &#x60;TaxRate&#x60; is set to zero.
  # @option opts [Integer] :request_offset Page offset, defaults to 0.
  # @option opts [Array<Integer>] :request_program_ids Filters to pricing options with the specified program IDs.
  # @option opts [BOOLEAN] :request_sell_online When &#x60;true&#x60;, filters to the pricing options that can be sold online.&lt;br /&gt;  Default: **false**
  # @option opts [Array<String>] :request_service_ids Filters to the pricing options with the specified IDs. In this context, service and pricing option are used interchangeably.
  # @option opts [Array<Integer>] :request_session_type_ids Filters to the pricing options with the specified session types IDs.
  # @option opts [Integer] :request_staff_id Sets &#x60;Price&#x60; and &#x60;OnlinePrice&#x60; to the particular pricing of a specific staff member, if allowed by the business.
  # @return [GetServicesResponse]
  describe 'sale_get_services test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sale_purchase_contract
  # Purchase a contract for a client.
  # Allows a client to sign up for a contract or autopay using the information returned from the &#x60;GET Contracts&#x60; endpoint. The client can pay with a new credit card or with a stored credit card. The client must exist at the site specified before this call is made.    This endpoint allows a developer to specify whether a client pays now or pays on the &#x60;StartDate&#x60;.If you are building a client-facing experience, you should talk with the business owner to understand the owner’s policies before you give clients a choice of the two payment types.
  # @param request 
  # @param site_id ID of the site from which to pull data.
  # @param version 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization A staff user authorization token.
  # @return [PurchaseContractResponse]
  describe 'sale_purchase_contract test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sale_purchase_gift_card
  # Purchase a gift card for a client.
  # Allows a client to purchase a gift card from a business in a variety of designs. The card can be emailed to the recipient on a specific day, and a card title and a personal message can be added.
  # @param request 
  # @param site_id ID of the site from which to pull data.
  # @param version 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization A staff user authorization token.
  # @return [PurchaseGiftCardResponse]
  describe 'sale_purchase_gift_card test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
